-- MySQL Script generated by MySQL Workbench
-- mer. 15 avril 2020 11:49:02 CEST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema tnt_db
-- -----------------------------------------------------
Å“
-- -----------------------------------------------------
-- Schema tnt_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `tnt_db` DEFAULT CHARACTER SET utf8 ;
USE `tnt_db` ;

-- -----------------------------------------------------
-- Table `tnt_db`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tnt_db`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `firstname` VARCHAR(45) NULL,
  `lastname` VARCHAR(45) NULL,
  `email` VARCHAR(100) NOT NULL,
  `phone` VARCHAR(15) NULL,
  `nickname` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `zip_code` VARCHAR(10) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tnt_db`.`product_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tnt_db`.`product_type` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tnt_db`.`exchange_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tnt_db`.`exchange_type` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tnt_db`.`category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tnt_db`.`category` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `parent_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_category_1_idx` (`parent_id` ASC),
  CONSTRAINT `fk_category_1`
    FOREIGN KEY (`parent_id`)
    REFERENCES `tnt_db`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tnt_db`.`product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tnt_db`.`product` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(100) NOT NULL,
  `description` TEXT NULL,
  `created_at` DATETIME NOT NULL,
  `user_id` INT NOT NULL,
  `product_type_id` INT NOT NULL,
  `img` TEXT NULL,
  `exchange_type_id` INT NOT NULL,
  `category_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_id`, `product_type_id`, `exchange_type_id`, `category_id`),
  INDEX `fk_product_user1_idx` (`user_id` ASC),
  INDEX `fk_product_product_type1_idx` (`product_type_id` ASC),
  INDEX `fk_product_exchange_type1_idx` (`exchange_type_id` ASC),
  INDEX `fk_product_category1_idx` (`category_id` ASC),
  CONSTRAINT `fk_product_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `tnt_db`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_product_product_type1`
    FOREIGN KEY (`product_type_id`)
    REFERENCES `tnt_db`.`product_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_product_exchange_type1`
    FOREIGN KEY (`exchange_type_id`)
    REFERENCES `tnt_db`.`exchange_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_product_category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `tnt_db`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tnt_db`.`favorite`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tnt_db`.`favorite` (
  `product_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`product_id`, `user_id`),
  INDEX `fk_product_has_user_user1_idx` (`user_id` ASC),
  INDEX `fk_product_has_user_product1_idx` (`product_id` ASC),
  CONSTRAINT `fk_product_has_user_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `tnt_db`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_product_has_user_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `tnt_db`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tnt_db`.`preference`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tnt_db`.`preference` (
  `user_id` INT NOT NULL,
  `category_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `category_id`),
  INDEX `fk_sub_category_has_user_user1_idx` (`user_id` ASC),
  INDEX `fk_preference_category1_idx` (`category_id` ASC),
  CONSTRAINT `fk_sub_category_has_user_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `tnt_db`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_preference_category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `tnt_db`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tnt_db`.`history_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tnt_db`.`history_type` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tnt_db`.`history`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tnt_db`.`history` (
  `id` INT NOT NULL,
  `product_id` INT NOT NULL,
  `history_type_id` INT NOT NULL,
  `created_at` DATETIME NULL,
  PRIMARY KEY (`id`, `product_id`, `history_type_id`),
  INDEX `fk_history_product1_idx` (`product_id` ASC),
  INDEX `fk_history_history_type1_idx` (`history_type_id` ASC),
  CONSTRAINT `fk_history_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `tnt_db`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_history_history_type1`
    FOREIGN KEY (`history_type_id`)
    REFERENCES `tnt_db`.`history_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

